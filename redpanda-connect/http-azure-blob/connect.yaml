input:
  label: http_input
  http_server:
    path: /post
    timeout: 5s
    sync_response:
      status: ${!json("status")}
      headers: { "Content-Type": "application/json" }

pipeline:
  processors:
    - try:
        - mapping: meta error_status = 400

        - label: json_schema_validation
          json_schema:
            schema_path: file:///json_schema.json

        - mapping: meta error_status = 500

        - label: enrich_with_factory_model
          branch:
            processors:
              - sql_raw:
                  driver: postgres
                  dsn: ${POSTGRES_CONNECTIONSTRING}
                  query: "SELECT demo.get_factory_model() as factory_model"
            result_map: |
              root.factory_model = this.0.factory_model.parse_json()

output:
  switch:
    cases:
      - check: errored()
        output:
          label: http_error_response
          sync_response: {}
          processors:
            - mapping: |
                root.status = @error_status | 500
                root.error = if @error_status == 400 { error() } else { "internal error" }

      - output:
          label: azure_blob_storage
          azure_blob_storage:
            storage_connection_string: ${AZURE_STORAGE_CONNECTION_STRING}
            container: ${AZURE_STORAGE_CONTAINER_NAME}
            path: messages/${!now().ts_format("2006/01/02","UTC")}/${!timestamp_unix_nano()}-${!"%06d".format(count("files"))}.json

logger:
  level: ${LOG_LEVEL:INFO}
  format: logfmt
  static_fields:
    service: http-azure-blob

http:
  address: ${HTTP_ADDRESS}

shutdown_delay: 10s
